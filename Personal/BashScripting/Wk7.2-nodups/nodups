#! /bin/bash
# nodups - check for duplicate files in folders (incomplete)
#
# D. Provine, 17 Nov 2011
# Appended by Ryan Edwards

# Check for right number of arguments
if (( $# != 2 )); then
    echo "usage: nodups dir1 dir2"
    echo "dir1 and dir2 are directories with files in them."
    echo "all files in dir2 which already exist in dir1 are removed."
    exit
fi

# check that $1 does not equal $2
if [ $1 == $2 ]; then
   echo Same directory specified twice. Disaster results.
   exit
fi

# check $1 is a folder
if [ -d $1 ]; then

    # counts the files in the directory
    # takes the wordcount value of ls to
    # count the files in the directory
    (( filecount = $(/bin/ls -l $1 | wc -l) ))

        if (( $filecount == 0 )); then
       	   echo $1 is empty
        fi
else
    echo $1 is not a directory
fi

# check $2 is a folder
if [ -d $2 ]; then
    (( secondFilecount = $(/bin/ls -l $2 | wc -l) ))
    if (( $secondFilecount == 0 )); then
	echo $2 is empty
    fi
else
    echo $2 is not a directory
fi

# Loop on all files in $1
#   1) if there is a file with same name in $2,
#      use "cmp -s" to see whether contents are the same
#      print result (either contents match or contents differ)
#   2) if there is no file with same name in $2, print message
for file in "$1"/*
do
    if [[ $(find $file) == $(find "$2"/*) ]]; then
	echo "It worked"
    else
	echo "It didn't"
fi

done
